[
    {
        "id": "a4da7fcd5f927cd0",
        "type": "mqtt in",
        "z": "0d5496d40e5ff2c3",
        "name": "",
        "topic": "Group1RealpeachInfo",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "00ae688fc657f4ef",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 500,
        "y": 640,
        "wires": [
            [
                "af34f8a2295022ef",
                "a52c187c2a35a027"
            ]
        ]
    },
    {
        "id": "b04cebc347c2e881",
        "type": "group",
        "z": "0d5496d40e5ff2c3",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5725f39abbd364e2",
            "af34f8a2295022ef",
            "eb295e828a94449c",
            "2f5d069c72105148",
            "a52c187c2a35a027"
        ],
        "x": 454,
        "y": 559,
        "w": 872,
        "h": 222
    },
    {
        "id": "5725f39abbd364e2",
        "type": "ui_slider",
        "z": "0d5496d40e5ff2c3",
        "g": "b04cebc347c2e881",
        "name": "",
        "label": "Threshold",
        "tooltip": "",
        "group": "6314cd2d13cab662",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "slider_topic",
        "topicType": "msg",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 540,
        "y": 740,
        "wires": [
            [
                "af34f8a2295022ef"
            ]
        ]
    },
    {
        "id": "af34f8a2295022ef",
        "type": "function",
        "z": "0d5496d40e5ff2c3",
        "g": "b04cebc347c2e881",
        "name": "function 2",
        "func": "var temp = {};  // Object to store the result\n// Extract values safely\nvar temperature = parseFloat(msg.payload.temperature);\nvar slider = parseFloat(msg.payload);\n// Retrieve the previous slider value from `flow` memory\nvar previousSlider = flow.get(\"fanThreshold\") || 25;  // Default to 25 if never set\n// If slider is missing (NaN), use the previous stored value\nif (isNaN(slider)) {\n    slider = previousSlider;\n} else {\n    // Update the stored value in `flow` memory\n    flow.set(\"fanThreshold\", slider);\n}\n// Store extracted values in the output object\nif(temperature > slider){\n    temp.payload={\"led\" : \"open\"};\n}else{\n    temp.payload={\"led\" : \"closed\"}\n}\nreturn temp;  // Return the processed object\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 680,
        "wires": [
            [
                "eb295e828a94449c",
                "2f5d069c72105148"
            ]
        ]
    },
    {
        "id": "eb295e828a94449c",
        "type": "debug",
        "z": "0d5496d40e5ff2c3",
        "g": "b04cebc347c2e881",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 680,
        "wires": []
    },
    {
        "id": "2f5d069c72105148",
        "type": "mqtt out",
        "z": "0d5496d40e5ff2c3",
        "g": "b04cebc347c2e881",
        "name": "",
        "topic": "Group1RealpeachHello",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "00ae688fc657f4ef",
        "x": 1190,
        "y": 740,
        "wires": []
    },
    {
        "id": "a52c187c2a35a027",
        "type": "ui_text",
        "z": "0d5496d40e5ff2c3",
        "g": "b04cebc347c2e881",
        "group": "6314cd2d13cab662",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature ",
        "format": "{{msg.payload.temperature}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 890,
        "y": 600,
        "wires": []
    },
    {
        "id": "6314cd2d13cab662",
        "type": "ui_group",
        "name": "Default",
        "tab": "aeb58cc8e10583d6",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "aeb58cc8e10583d6",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "00ae688fc657f4ef",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.emqx.io",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]